Home/Index.cshtml
@model IEnumerable<ProductsApp.Models.Product>

<br />
<h2 class="text-center">Afisare produse</h2>

<br />

@if (ViewBag.Message != null)
{
    <div class="alert-success p-3 rounded-3 text-center mb-5 @ViewBag.Alert">
        @ViewBag.Message
    </div>
}

<br />

@* Motorul de căutare *@
@* Motorul de cautare *@
<form method="GET" class="d-flex mb-4">
    <input type="text" class="form-control me-2" placeholder="Caută produse..." name="search" value="@ViewBag.SearchString">
    <select class="form-select me-2" name="sortOrder" onchange="this.form.submit()">
        @if (ViewBag.CurrentSort == "")
        {
            <option value="" selected>Sortare implicită</option>
        }
        else
        {
            <option value="">Sortare implicită</option>
        }

        @if (ViewBag.CurrentSort == "price_asc")
        {
            <option value="price_asc" selected>Preț crescător</option>
        }
        else
        {
            <option value="price_asc">Preț crescător</option>
        }

        @if (ViewBag.CurrentSort == "price_desc")
        {
            <option value="price_desc" selected>Preț descrescător</option>
        }
        else
        {
            <option value="price_desc">Preț descrescător</option>
        }

        @if (ViewBag.CurrentSort == "rating_asc")
        {
            <option value="rating_asc" selected>Rating crescător</option>
        }
        else
        {
            <option value="rating_asc">Rating crescător</option>
        }

        @if (ViewBag.CurrentSort == "rating_desc")
        {
            <option value="rating_desc" selected>Rating descrescător</option>
        }
        else
        {
            <option value="rating_desc">Rating descrescător</option>
        }
    </select>
    <button type="submit" class="btn btn-outline-success">Caută</button>
</form>


@* Implementarea Carouselului pentru produse *@
@{
    int produsePeSlide = 5; // Numărul de produse pe slide
    var grupateProduse = Model.Select((produs, index) => new { produs, index })
                              .GroupBy(x => x.index / produsePeSlide)
                              .ToList();
}

@if (grupateProduse.Any())
{
    <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
            @for (int i = 0; i < grupateProduse.Count; i++)
            {
                var grup = grupateProduse[i];
                <div class="carousel-item @(i == 0 ? "active" : "")">
                    <div class="row">
                        @foreach (var item in grup)
                        {
                            <div class="col-md-2 mb-4">
                                <div class="card h-100 shadow-sm">
                                    <!-- Imaginea produsului -->
                                    <div class="card-img-top-container" style="width: 100%; height: 150px; overflow: hidden; display: flex; justify-content: center; align-items: center;">
                                        @if (!string.IsNullOrEmpty(item.produs.ImageUrl))
                                        {
                                            <img src="@item.produs.ImageUrl" class="card-img-top" alt="Imaginea produsului" style="width: auto; height: 100%; object-fit: cover;" />
                                        }
                                        else
                                        {
                                            <img src="https://via.placeholder.com/150" class="card-img-top" alt="Imaginea produsului" />
                                        }
                                    </div>

                                    <!-- Informații despre produs -->
                                    <div class="card-body d-flex flex-column">
                                        <!-- Titlu Produs -->
                                        <h5 class="card-title truncate mb-2" title="@item.produs.Title">@item.produs.Title</h5>

                                        <!-- Preț -->
                                        <h6 class="mb-1"><strong>Preț:</strong> @item.produs.Price.ToString("0.00") RON</h6>

                                        <!-- Categoria -->
                                        <p class="card-text mb-1"><strong>Categorie:</strong> @(item.produs.Category?.CategoryName ?? "N/A")</p>

                                        <!-- Utilizatorul care a adăugat produsul -->
                                        <p class="card-text mb-1"><strong>Adăugat de:</strong> @(item.produs.User?.Email ?? "Utilizator necunoscut")</p>

                                        <!-- Data adăugării -->
                                        <p class="card-text mb-2"><strong>Data:</strong> @item.produs.Date.ToString("d/MM/yyyy hh:mm:ss tt")</p>

                                        <!-- Rating -->
                                        <div class="mb-2">
                                            <span class="text-warning">
                                                @for (int star = 1; star <= 5; star++)
                                                {
                                                    <i class="bi @(star <= Math.Round(item.produs.Rating ?? 0, MidpointRounding.AwayFromZero) ? "bi-star-fill" : "bi-star")"></i>
                                                }
                                            </span>
                                        </div>

                                        <!-- Buton Afisare produs -->
                                        <a class="btn btn-success btn-sm mt-auto" asp-controller="Products" asp-action="Show" asp-route-id="@item.produs.Id">Afisare produs</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        @* Controale Carousel *@
        @if (grupateProduse.Count > 1)
        {
            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Anterior</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Următor</span>
            </button>
        }
    </div>
}
else
{
    <p class="text-center">Nu există produse de afișat.</p>
}

@* Afisarea paginata a produselor *@
<div class="mt-4">
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { search = ViewBag.SearchString, sortOrder = ViewBag.CurrentSort, page = 1 })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>

            @for (int i = 1; i <= ViewBag.lastPage; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { search = ViewBag.SearchString, sortOrder = ViewBag.CurrentSort, page = i })">@(i)</a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.lastPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { search = ViewBag.SearchString, sortOrder = ViewBag.CurrentSort, page = ViewBag.lastPage })" aria-label="Next">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
